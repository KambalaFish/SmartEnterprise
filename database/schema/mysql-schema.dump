-- MySQL Script generated by MySQL Workbench
-- Сб 07 авг 2021 20:53:48
-- Model: Sakila Full    Version: 2.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema praktika
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema praktika
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `praktika` DEFAULT CHARACTER SET utf8 ;
USE `praktika` ;

-- -----------------------------------------------------
-- Table `praktika`.`migrations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `praktika`.`migrations` (
    `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `migration` VARCHAR(255) NOT NULL,
    `batch` INT NOT NULL,
    PRIMARY KEY(`id`))
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `praktika`.`company`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `praktika`.`company` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NOT NULL,
  `country` VARCHAR(100) NOT NULL,
  `city` VARCHAR(100) NOT NULL,
  `address` VARCHAR(300) NOT NULL,
  `zipCode` INT NOT NULL,
  `usersNumber` INT NOT NULL,
  `beaconsNumber` INT NOT NULL,
  `status` ENUM('served', 'not served') NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `praktika`.`staff`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `praktika`.`staff` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `firstName` VARCHAR(100) NOT NULL,
  `lastName` VARCHAR(100) NOT NULL,
  `phoneNumber` VARCHAR(300) NOT NULL,
  `email` VARCHAR(300) NOT NULL,
  `status` ENUM('works', 'on_vacation', 'illness') NOT NULL,
  `login` VARCHAR(120) NOT NULL,
  `password` VARCHAR(120) NOT NULL,
  `companyId` INT NOT NULL,
  `remember_token` VARCHAR(100) NULL,
  `usertype` ENUM('systemAdmin', 'companyAdmin', 'manager') NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Staff_company1_idx` (`companyId` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  CONSTRAINT `fk_Staff_company1`
    FOREIGN KEY (`companyId`)
    REFERENCES `praktika`.`company` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `praktika`.`epic`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `praktika`.`epic` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NOT NULL,
  `description` VARCHAR(300) NOT NULL,
  `supposedTime` TIMESTAMP NOT NULL,
  `priority` TINYINT(1) NOT NULL,
  `creationDate` DATETIME NOT NULL,
  `staffReporterId` INT NOT NULL,
  `companyId` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_epic_staff1_idx` (`staffReporterId` ASC),
  INDEX `fk_epic_company1_idx` (`companyId` ASC),
  CONSTRAINT `fk_epic_staff1`
    FOREIGN KEY (`staffReporterId`)
    REFERENCES `praktika`.`staff` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_epic_company1`
    FOREIGN KEY (`companyId`)
    REFERENCES `praktika`.`company` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `praktika`.`customWorkflow`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `praktika`.`customWorkflow` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `workflow` VARCHAR(600) NOT NULL,
  `companyId` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_custom_workflow_company1_idx` (`companyId` ASC),
  CONSTRAINT `fk_custom_workflow_company1`
    FOREIGN KEY (`companyId`)
    REFERENCES `praktika`.`company` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `praktika`.`task`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `praktika`.`task` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NOT NULL,
  `description` VARCHAR(300) NOT NULL,
  `supposedTime` TIMESTAMP(6) NOT NULL,
  `loggedTime` TIMESTAMP NOT NULL,
  `priority` TINYINT(1) NOT NULL,
  `creationDate` DATETIME NOT NULL,
  `staffReporterId` INT NOT NULL,
  `companyId` INT NOT NULL,
  `customWorkflowId` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_task_staff1_idx` (`staffReporterId` ASC),
  INDEX `fk_task_company1_idx` (`companyId` ASC),
  INDEX `fk_task_custom_workflow1_idx` (`customWorkflowId` ASC),
  CONSTRAINT `fk_task_staff1`
    FOREIGN KEY (`staffReporterId`)
    REFERENCES `praktika`.`staff` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_task_company1`
    FOREIGN KEY (`companyId`)
    REFERENCES `praktika`.`company` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_task_custom_workflow1`
    FOREIGN KEY (`customWorkflowId`)
    REFERENCES `praktika`.`customWorkflow` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `praktika`.`epicTask`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `praktika`.`epicTask` (
  `taskId` INT NOT NULL,
  `epicId` INT NOT NULL,
  PRIMARY KEY (`taskId`, `epicId`),
  INDEX `fk_epic_task_epic1_idx` (`epicId` ASC),
  CONSTRAINT `fk_epic_task_task1`
    FOREIGN KEY (`taskId`)
    REFERENCES `praktika`.`task` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_epic_task_epic1`
    FOREIGN KEY (`epicId`)
    REFERENCES `praktika`.`epic` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `praktika`.`taskWorkflow`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `praktika`.`taskWorkflow` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `beginningDate` DATETIME NOT NULL,
  `loggedTime` TIMESTAMP NOT NULL,
  `taskId` INT NOT NULL,
  `staffId` INT NOT NULL,
  `companyId` INT NOT NULL,
  `status` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_task_workflow_task1_idx` (`taskId` ASC),
  INDEX `fk_task_workflow_staff1_idx` (`staffId` ASC),
  INDEX `fk_task_workflow_company1_idx` (`companyId` ASC),
  CONSTRAINT `fk_task_workflow_task1`
    FOREIGN KEY (`taskId`)
    REFERENCES `praktika`.`task` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_task_workflow_staff1`
    FOREIGN KEY (`staffId`)
    REFERENCES `praktika`.`staff` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_task_workflow_company1`
    FOREIGN KEY (`companyId`)
    REFERENCES `praktika`.`company` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `praktika`.`location`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `praktika`.`location` (
  `uuid` VARCHAR(36) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `companyId` INT NOT NULL,
  PRIMARY KEY (`uuid`),
  INDEX `fk_location_company1_idx` (`companyId` ASC),
  CONSTRAINT `fk_location_company1`
    FOREIGN KEY (`companyId`)
    REFERENCES `praktika`.`company` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `praktika`.`role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `praktika`.`role` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(150) NOT NULL,
  `usersNumber` INT NOT NULL,
  `companyId` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Roles_company1_idx` (`companyId` ASC),
  CONSTRAINT `fk_Roles_company1`
    FOREIGN KEY (`companyId`)
    REFERENCES `praktika`.`company` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `praktika`.`department`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `praktika`.`department` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(150) NOT NULL,
  `usersNumber` INT NOT NULL,
  `companyId` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Departments_company1_idx` (`companyId` ASC),
  CONSTRAINT `fk_Departments_company1`
    FOREIGN KEY (`companyId`)
    REFERENCES `praktika`.`company` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `praktika`.`subtask`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `praktika`.`subtask` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NOT NULL,
  `description` VARCHAR(300) NOT NULL,
  `supposedTime` TIMESTAMP NOT NULL,
  `loggedTime` TIMESTAMP NOT NULL,
  `priority` TINYINT(1) NOT NULL,
  `creationDate` DATETIME NOT NULL,
  `taskId` INT NOT NULL,
  `locationUuid` VARCHAR(36) NOT NULL,
  `roleId` INT NOT NULL,
  `staffReporterId` INT NOT NULL,
  `companyId` INT NOT NULL,
  `departmentId` INT NOT NULL,
  `customWorkflowId` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_subtask_task1_idx` (`taskId` ASC),
  INDEX `fk_subtask_location1_idx` (`locationUuid` ASC),
  INDEX `fk_subtask_role1_idx` (`roleId` ASC),
  INDEX `fk_subtask_staff1_idx` (`staffReporterId` ASC),
  INDEX `fk_subtask_company1_idx` (`companyId` ASC),
  INDEX `fk_subtask_department1_idx` (`departmentId` ASC),
  INDEX `fk_subtask_custom_workflow1_idx` (`customWorkflowId` ASC),
  CONSTRAINT `fk_subtask_task1`
    FOREIGN KEY (`taskId`)
    REFERENCES `praktika`.`task` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_subtask_location1`
    FOREIGN KEY (`locationUuid`)
    REFERENCES `praktika`.`location` (`uuid`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_subtask_role1`
    FOREIGN KEY (`roleId`)
    REFERENCES `praktika`.`role` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_subtask_staff1`
    FOREIGN KEY (`staffReporterId`)
    REFERENCES `praktika`.`staff` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_subtask_company1`
    FOREIGN KEY (`companyId`)
    REFERENCES `praktika`.`company` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_subtask_department1`
    FOREIGN KEY (`departmentId`)
    REFERENCES `praktika`.`department` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_subtask_custom_workflow1`
    FOREIGN KEY (`customWorkflowId`)
    REFERENCES `praktika`.`customWorkflow` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `praktika`.`subtaskWorkflow`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `praktika`.`subtaskWorkflow` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `beginningDate` DATETIME NOT NULL,
  `loggedTime` TIMESTAMP NOT NULL,
  `subtaskId` INT NOT NULL,
  `staffId` INT NOT NULL,
  `companyId` INT NOT NULL,
  `status` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_subtask_workflow_subtask1_idx` (`subtaskId` ASC),
  INDEX `fk_subtask_workflow_staff1_idx` (`staffId` ASC),
  INDEX `fk_subtask_workflow_company1_idx` (`companyId` ASC),
  CONSTRAINT `fk_subtask_workflow_subtask1`
    FOREIGN KEY (`subtaskId`)
    REFERENCES `praktika`.`subtask` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_subtask_workflow_staff1`
    FOREIGN KEY (`staffId`)
    REFERENCES `praktika`.`staff` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_subtask_workflow_company1`
    FOREIGN KEY (`companyId`)
    REFERENCES `praktika`.`company` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `praktika`.`taskLocation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `praktika`.`taskLocation` (
  `taskId` INT NOT NULL,
  `locationUuid` VARCHAR(36) NOT NULL,
  PRIMARY KEY (`taskId`, `locationUuid`),
  INDEX `fk_task_location_location1_idx` (`locationUuid` ASC),
  CONSTRAINT `fk_task_location_task1`
    FOREIGN KEY (`taskId`)
    REFERENCES `praktika`.`task` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_task_location_location1`
    FOREIGN KEY (`locationUuid`)
    REFERENCES `praktika`.`location` (`uuid`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `praktika`.`mainAdminContact`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `praktika`.`mainAdminContact` (
  `companyId` INT NOT NULL,
  `firstName` VARCHAR(100) NOT NULL,
  `lastName` VARCHAR(100) NOT NULL,
  `email` VARCHAR(300) NOT NULL,
  `phoneNumber` VARCHAR(300) NOT NULL,
  PRIMARY KEY (`companyId`),
  CONSTRAINT `fk_MainAdminContact_company1`
    FOREIGN KEY (`companyId`)
    REFERENCES `praktika`.`company` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `praktika`.`itDepartmentContact`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `praktika`.`itDepartmentContact` (
  `companyId` INT NOT NULL,
  `firstName` VARCHAR(100) NOT NULL,
  `lastName` VARCHAR(100) NOT NULL,
  `email` VARCHAR(300) NOT NULL,
  `phoneNumber` VARCHAR(300) NOT NULL,
  PRIMARY KEY (`companyId`),
  CONSTRAINT `fk_ItDeptartmentContact_company1`
    FOREIGN KEY (`companyId`)
    REFERENCES `praktika`.`company` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `praktika`.`customerManagerContact`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `praktika`.`customerManagerContact` (
  `companyId` INT NOT NULL,
  `firstName` VARCHAR(100) NOT NULL,
  `lastName` VARCHAR(100) NOT NULL,
  `email` VARCHAR(300) NOT NULL,
  `phoneNumber` VARCHAR(300) NOT NULL,
  PRIMARY KEY (`companyId`),
  CONSTRAINT `fk_CustomerManagerContact_company1`
    FOREIGN KEY (`companyId`)
    REFERENCES `praktika`.`company` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `praktika`.`team`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `praktika`.`team` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(150) NOT NULL,
  `usersNumber` INT NOT NULL,
  `companyId` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Teams_company1_idx` (`companyId` ASC),
  CONSTRAINT `fk_Teams_company1`
    FOREIGN KEY (`companyId`)
    REFERENCES `praktika`.`company` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `praktika`.`roleStaff`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `praktika`.`roleStaff` (
  `roleId` INT NOT NULL,
  `staffId` INT NOT NULL,
  PRIMARY KEY (`roleId`, `staffId`),
  INDEX `fk_Roles_Staff_Staff1_idx` (`staffId` ASC),
  CONSTRAINT `fk_Roles_Staff_Roles1`
    FOREIGN KEY (`roleId`)
    REFERENCES `praktika`.`role` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Roles_Staff_Staff1`
    FOREIGN KEY (`staffId`)
    REFERENCES `praktika`.`staff` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `praktika`.`departmentStaff`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `praktika`.`departmentStaff` (
  `departmentId` INT NOT NULL,
  `staffId` INT NOT NULL,
  PRIMARY KEY (`departmentId`, `staffId`),
  INDEX `fk_Departments_Staff_Staff1_idx` (`staffId` ASC),
  CONSTRAINT `fk_Departments_Staff_Departments1`
    FOREIGN KEY (`departmentId`)
    REFERENCES `praktika`.`department` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Departments_Staff_Staff1`
    FOREIGN KEY (`staffId`)
    REFERENCES `praktika`.`staff` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `praktika`.`teamStaff`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `praktika`.`teamStaff` (
  `teamId` INT NOT NULL,
  `staffId` INT NOT NULL,
  PRIMARY KEY (`teamId`, `staffId`),
  INDEX `fk_Teams_Staff_Staff1_idx` (`staffId` ASC),
  CONSTRAINT `fk_Teams_Staff_Teams1`
    FOREIGN KEY (`teamId`)
    REFERENCES `praktika`.`team` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Teams_Staff_Staff1`
    FOREIGN KEY (`staffId`)
    REFERENCES `praktika`.`staff` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `praktika`.`taskRole`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `praktika`.`taskRole` (
  `taskId` INT NOT NULL,
  `roleId` INT NOT NULL,
  PRIMARY KEY (`taskId`, `roleId`),
  INDEX `fk_task_role_role1_idx` (`roleId` ASC),
  CONSTRAINT `fk_task_role_task1`
    FOREIGN KEY (`taskId`)
    REFERENCES `praktika`.`task` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_task_role_role1`
    FOREIGN KEY (`roleId`)
    REFERENCES `praktika`.`role` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `praktika`.`taskDepartment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `praktika`.`taskDepartment` (
  `taskId` INT NOT NULL,
  `departmentId` INT NOT NULL,
  PRIMARY KEY (`taskId`, `departmentId`),
  INDEX `fk_task_department_department1_idx` (`departmentId` ASC),
  CONSTRAINT `fk_task_department_task1`
    FOREIGN KEY (`taskId`)
    REFERENCES `praktika`.`task` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_task_department_department1`
    FOREIGN KEY (`departmentId`)
    REFERENCES `praktika`.`department` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `praktika`.`taskTeam`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `praktika`.`taskTeam` (
  `taskId` INT NOT NULL,
  `teamId` INT NOT NULL,
  PRIMARY KEY (`taskId`, `teamId`),
  INDEX `fk_task_team_team1_idx` (`teamId` ASC),
  CONSTRAINT `fk_task_team_task1`
    FOREIGN KEY (`taskId`)
    REFERENCES `praktika`.`task` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_task_team_team1`
    FOREIGN KEY (`teamId`)
    REFERENCES `praktika`.`team` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

USE `praktika` ;
